// Generated using `moon info`, DON'T EDIT IT
package "tonyfettes/c"

// Values
fn atexit(FuncRef[() -> Unit]) -> Int

fn[T] exit(Int) -> T

fn[T] free(Pointer[T]) -> Unit

fn[T] malloc(UInt64) -> Pointer[T]

fn memcpy(Pointer[Byte], Pointer[Byte], UInt64) -> Unit

fn memcpy_from_bytes(Pointer[Byte], Bytes, UInt64) -> Unit

fn memcpy_to_bytes(Bytes, Pointer[Byte], UInt64) -> Unit

fn[T] none() -> Nullable[T]

let null : Null

// Errors

// Types and methods
#external
pub type Null

#external
pub type Nullable[_]
fn[T] Nullable::is_null(Self[T]) -> Bool
fn[T] Nullable::none() -> Self[T]
fn[T] Nullable::of(T?) -> Self[T]
fn[T] Nullable::some(T) -> Self[T]
fn[T] Nullable::to(Self[T]) -> T?

#external
pub type Pointer[_]
fn[T, U] Pointer::cast(Self[T]) -> Self[U]
fn[T] Pointer::is_null(Self[T]) -> Bool
fn[T : Load] Pointer::load(Self[T], offset? : Int) -> T
fn[T] Pointer::null() -> Self[T]
fn Pointer::op_equal(Self[Unit], Self[Unit]) -> Bool
fn[T : Load] Pointer::op_get(Self[T], Int) -> T
fn[T : Store] Pointer::op_set(Self[T], Int, T) -> Unit
fn[T : Store] Pointer::store(Self[T], offset? : Int, T) -> Unit
impl[T] Eq for Pointer[T]

type UIntPtr
fn UIntPtr::from_byte(Byte) -> Self
fn UIntPtr::from_int(Int) -> Self
fn UIntPtr::from_int16(Int16) -> Self
fn UIntPtr::from_int64(Int64) -> Self
fn[T] UIntPtr::from_pointer(Pointer[T]) -> Self
fn UIntPtr::from_uint(UInt) -> Self
fn UIntPtr::from_uint16(UInt16) -> Self
fn UIntPtr::from_uint64(UInt64) -> Self
fn UIntPtr::to_byte(Self) -> Byte
fn UIntPtr::to_int(Self) -> Int
fn UIntPtr::to_int16(Self) -> Int16
fn UIntPtr::to_int64(Self) -> Int64
fn UIntPtr::to_uint(Self) -> Int
fn UIntPtr::to_uint16(Self) -> UInt16
fn UIntPtr::to_uint64(Self) -> Int64
impl Show for UIntPtr

// Type aliases
pub typealias Pointer as Ptr

// Traits
pub(open) trait Load {
  load(Pointer[Self], Int) -> Self
}
impl Load for Byte
impl Load for Int
impl Load for Int16
impl Load for Int64
impl Load for UInt
impl Load for UInt16
impl Load for UInt64
impl Load for Float
impl Load for Double

trait Store
impl Store for Byte
impl Store for Int
impl Store for Int16
impl Store for Int64
impl Store for UInt
impl Store for UInt16
impl Store for UInt64
impl Store for Float
impl Store for Double

